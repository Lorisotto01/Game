# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- windows

name: $(Year:yy).$(Month).$(DayOfMonth).$(BuildID)-$(SourceBranchName)


variables:
  AgentImage: "windows-latest"
  system.debug: true #Setting debug to true will add extra output to the logs but can be useful while trying to determine full reason for failures
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactName: 'Simple3D'

stages:
- stage: 'Build_Stage' #Stage name cannot have spaces
  displayName: 'Build'

  jobs:
  - job: 'BuildJob' #Job name cannot have spaces
    displayName: 'Application Build'

    pool:
      vmImage: $(AgentImage)

  - stage: 'BuildAndTest'
    steps:
    - task: VSBuild@1 #as well automatically restores packages (alternative to nuget/dotnet restore)
      displayName: 'VS Build & Package restore'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      displayName: 'VS Test'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

  - stage: 'Consitancy Check'
    steps:
  # - template: templates/assetsControl.yml
  #   parameters:
  #     fileExtention: 'wav'
  #     count: 2

  # - template: templates/assetsControl.yml
  #   parameters:
  #     fileExtention: 'dds'
  #     count: 5

    - script: mail -s "Assets check result" amico@libero.it <<< assetCheck.txt

    - bash: Oscdimg -dn $(Build.SourcesDirectory) $(Build.ArtifactStagingDirectory)/$(artifactName)

  - stage: PublishArtifact #https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/build-artifacts?view=azure-devops&tabs=yaml
    steps:
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)' # da rivedere estensioni
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1 # recommendded for faster performance
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: $(artifactName)

    #https://medium.com/@douglaslassance/automating-unreal-engine-project-builds-for-steam-using-github-4f164c803df0


# Download and debug
    # - task: DownloadBuildArtifacts@0
    #   inputs:
    #     buildType: 'current'
    #     downloadType: 'single'
    #     artifactName: 'drop'
    #     downloadPath: '$(System.ArtifactsDirectory)'

# imageBuild alternative
  # - stage: Deploy
  #   steps:
  #   - task: AzureResourceManagerTemplateDeployment@3
  #     inputs:
  #       deploymentScope: 'Resource Group'
  #       azureResourceManagerConnection: 'ImageBuilder'
  #       subscriptionId: '3a36346f-08ec-4d4a-9f19-60bd98c217c4'
  #       action: 'Create Or Update Resource Group'
  #       resourceGroupName: '$(ResourceGroup)'
  #       location: '$(Location)'
  #       templateLocation: 'Linked artifact'
  #       deploymentMode: 'Incremental'



